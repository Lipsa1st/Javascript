
==========================================================================================
Assignment 1

1. Create a JavaScript program to list Fibbonacci series till a given number.
==========================================================================================

Fibonacci.html

<html>
<head>
    <meta charset="utf-8">
    <title>My Fibo</title>

</head>
<body>
    <script src="MyFibo.js"></script>
</body>
<html>

MyFibo.js

    var var1 = 0;//Defining first value in fibonacci series
    var var2 = 1;//Defining second value in fibonacci series
    var var3;//Declaring a variable

    var limit = 20;//Giving the limit

    document.write(var1+"  ");//Printing the first value in the fibonacci series
    document.write(var2+"  ");//Printing the second value in the fibonacci series

    for(var i=3; i <= limit;i++)//for loop
    {
        var3 = var1 + var2;//storing the further values of fibonacci series in var 3
        var1 = var2;//swapping the variables
        var2 = var3;//swapping the variables
        document.write(var3+"  ");//printing the series one by one upto the limit
    }

==========================================================================================
Assignment 2

2. Build a pyramid of "*" for a given number of rows.
==========================================================================================

Pyramid.html

<html>
<head>
    <meta charset="utf-8">
    <title>My pyramid</title>
</head>
<body>
    <script src="MyPyramid.js"></script>
</body>
</html>

MyPyramid.js

document.write("<center>");//center tag to print hte value i the center
for(var i = 0; i <= 10; i++)//for loop for forming pyramid
{
    for(var x = 0; x <= i; x++)//inner for loop
    {
        document.write("*");//printing the * to form a pyramid accordingly
    }
    document.write("<br/>");//line break tag
}
document.write("</center>");//closing of center tag

==========================================================================================
Assignment 3

3. Flatten the following object:
var myObj = [5, [22], [[14]], [[4]],[5,6]]
==========================================================================================

Flatten.html

<html>
<head>
    <meta charset="utf-8">
    <title>Flatten object</title>
</head>
<body>
    <script src="FlattenObj.js">
    </script>
</body>
</html>

FlattenObj.js

var arr = [5, [22], [[14]], [[4]],[5,6]];//Initializing the object array
var flattened = [].concat.apply([],arr);//applying the concat to form the flattened object
document.write(flattened);//printing the flattened value

==========================================================================================
Assignment 4

Exercise 1: Display all objects with occupation as 'Programmer'
==========================================================================================

Ques4(i).html

<html>
<head>
    <meta charset="utf-8">
    <title>Ques4(i)</title>
</head>
<body>
    <script src="Ques4(i).js">
    </script>

Ques4(i).js

var myObj =
[{'name':'Saurabh', 'age': 30, 'occupation': "Team Leader"},
{'name':'Anupriya', 'age': 32, 'occupation': "Team Leader"},
{'name':'Kalyani', 'age': 25, 'occupation': "Programmer"},
{'name':'Damodaran', 'age': 27, 'occupation': "Programmer"},
{'name':'Krishnakath', 'age': 22, 'occupation': "Programmer"},
{'name':'Venketraman', 'age': 28, 'occupation': "Programmer"}];//Object initialization

document.write("The employees with the occupation as Programmer is: <br/><br/>");//Printing the heading

for(var i=0;i<myObj.length;i++)
{
    if(myObj[i].occupation=="Programmer")//selecting the occupation only as Programmer
    {
        document.write(JSON.stringify(myObj[i])+"<br/>");//printing the values whose occupation is Programmer
    }
}
</body>
</html>

==========================================================================================
Assignment 4

Exercise 2: Sort the object basis the age key in the descending order
==========================================================================================

Ques4(ii).html

<html>
<head>
    <meta charset="utf-8">
    <title>Ques4(ii)</title>
</head>
<body>
    <script src="Ques4(ii).js">
    </script>
</body>
</html>

Ques4(ii).js

var myObj =
[{'name':'Saurabh', 'age': 30, 'occupation': "Team Leader"},
{'name':'Anupriya', 'age': 32, 'occupation': "Team Leader"},
{'name':'Kalyani', 'age': 25, 'occupation': "Programmer"},
{'name':'Damodaran', 'age': 27, 'occupation': "Programmer"},
{'name':'Krishnakath', 'age': 22, 'occupation': "Programmer"},
{'name':'Venketraman', 'age': 28, 'occupation': "Programmer"}];//Object initialization

document.write("The employees age in descending order: <br/><br/>");//Printing the heading

var output1=[];//defining the empty object array

function descAge(i,j)//function for forming
{
    var output= parseInt(i.age) - parseInt(j.age);//subtract the first value with second for further comparion
    return output;//returning the subtracted values
}

output1=myObj.sort(descAge);//sorting the values of myObj object array according to the subtracted values in increasing order

document.write(JSON.stringify(output1.reverse()));//sorting in descending order by applying reverse()
document.write("<br/>");//break line
console.log(myObj.name[0]);//checking in console

==========================================================================================
Assignment 4
Exercise 3: Recreate the above array of objects into the following object of objects :

{ 'Team Leader' : [{'name':_____________, 'age':__________},{}], 
'<anotheroccupation>': [{'name':______________, 'age':________},{}]}
==========================================================================================

occupation.html

<html>
<head>
    <meta charset="utf-8">
    <title>Unique Occupation</title>
</head>
<body>
    <script src="occupation.js">
    </script>
</body>
</html>

occupation.js

var myObj =
[{'name':'Saurabh', 'age': 30, 'occupation': "Team Leader"},
{'name':'Anupriya', 'age': 32, 'occupation': "Team Leader"},
{'name':'Kalyani', 'age': 25, 'occupation': "Programmer"},
{'name':'Damodaran', 'age': 27, 'occupation': "Programmer"},
{'name':'Krishnakath', 'age': 22, 'occupation': "Programmer"},
{'name':'Venketraman', 'age': 28, 'occupation': "Programmer"}];//initialize the object array

var occupation1 = [];//declare a variable to store the unique occupation
var finalObj=[];
for(var i=0;i<myObj.length;i++)//for loop to store an array of occupation
{
    if(occupation1.indexOf(myObj[i].occupation)==-1)//if the index of occupation is not found in the myObj object array
    {
        occupation1.push(myObj[i].occupation);//push it into the occupation1 object array
    }
}
for(var i=0;i<occupation1.length;i++)//outer loop for selecting occupation
{
    var newObj = [];
    for(var j=0;j<myObj.length;j++)//inner loop for selecting values in myObj array
    {
        if(occupation1[i]==myObj[j].occupation)//if the list of occupation matches with occupation of myObj object array
        {
            var val= [{'name':myObj[j].name, 'age':myObj[j].age}];//then select the values i.e;name and age and store in val
            newObj.push(val);//store all the values in the newObj object array
        }
    }
    var obj={};//declare an object variable obj
    var key=occupation1[i];//store the occupation object array in key
    obj[key]=newObj;//store the values with its key
    finalObj.push(obj);//and finally push the key - values in finalObj object array
    document.write(JSON.stringify(finalObj[i])+"<br/>");//Print the output
}

==========================================================================================Assignment 5

Using JavaScript you need to create an array from the preceding JSON data as:
[{"name":"From","value":"RTBdemand <jobs@myamcat.com>"},{"name":"Subject","value":"Job Oppurtunity"},{"name":"Date","value":"Sat, 6 Aug 2016 03:31:50 +0000"}]
==========================================================================================
MyJSON.html

<html>
<head>
    <meta charset="utf-8">
    <title>JSON</title>
</head>
<body>
    <script src="JSON.js"> </script>
</body>
</html>

JSON.js

var MyJsonString=
[{"headers":
[{"name":"Delivered-To","value":"abc@gmail.com"},
{"name":"Received","value":"by 10.79.0.141 with SMTP id q13csp95822ivf;Fri, 5 Aug 2016 20:31:51 -0700 (PDT)"},
{"name":"X-Received","value":"by 10.200.53.214 with SMTP id l22mr16414606qtb.117.1470454311555;Fri, 05 Aug 2016 20:31:51 -0700 (PDT)"},
{"name":"Return-Path","value":"<010001565de826e8-bf930bf5-2428-4d51-8319-0053efe59f7d-000000@amazonses.com>"},
{"name":"Received","value":"from a11-60.smtp-out.amazonses.com (a11-60.smtp-out.amazonses.com. [54.240.11.60]) by mx.google.com with ESMTPS id 82si10783839qkv.54.2016.08.05.20.31.51 for <abc@gmail.com> (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128); Fri, 05 Aug 2016 20:31:51 -0700 (PDT)"},
{"name":"Received-SPF","value":"pass (google.com: domain of 010001565de826e8-bf930bf5-2428-4d51-8319-0053efe59f7d-000000@amazonses.com designates 54.240.11.60 as permitted sender) client-ip=54.240.11.60;"},
{"name":"Authentication-Results","value":"mx.google.com; dkim=pass header.i=@amazonses.com;spf=pass (google.com: domain of 010001565de826e8-bf930bf5-2428-4d51-8319-0053efe59f7d-000000@amazonses.com designates 54.240.11.60 as permitted sender) smtp.mailfrom=010001565de826e8-bf930bf5-2428-4d51-8319-0053efe59f7d-000000@amazonses.com"},
{"name":"DKIM-Signature","value":"v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple; s=6gbrjpgwjskckoa6a5zn6fwqkn67xbtw; d=amazonses.com; t=1470454310; h=To:Subject:Reply-To:From:Date:Content-Type:Content-Transfer-Encoding:MIME-Version:Message-Id:Feedback-ID; bh=WhZ7k1GbHb1qcuE1JXPquWyaVcgXwSZfB5qNsVaFviI=; b=exB/OVdA8B2Skad1XA2JqIa0e22Rg70/JcHBhoevhgK/fgr6IanLMXMFRTtJ3rAp 2Zg74Dnp87ivy5LoW5T1+FxDR0bOQsw264oGuD6HIGKSikwjCiDLBbt3WqMMQf4IYuR H45+3VIO6XTKf81Fw+r8o5sxzq+Y5xOPahLW06hE="},
{"name":"To","value":"xyz <abc@gmail.com>"},{"name":"Subject","value":"Job Oppurtunity"},{"name":"Reply-To","value":"jobs@myamcat.com"},
{"name":"From","value":"RTBdemand <jobs@myamcat.com>"},
{"name":"Date","value":"Sat, 6 Aug 2016 03:31:50 +0000"},
{"name":"Content-Type","value":"text/html; charset=utf-8"},
{"name":"Content-Transfer-Encoding","value":"quoted-printable"},
{"name":"Content-Disposition","value":"inline"},
{"name":"MIME-Version","value":"1.0"},
{"name":"Message-ID","value":"<010001565de826e8-bf930bf5-2428-4d51-8319-0053efe59f7d-000000@email.amazonses.com>"},
{"name":"X-SES-Outgoing","value":"2016.08.06-54.240.11.60"},
{"name":"Feedback-ID","value":"1.us-east-1.jTbLHn5j5YgMUczvi9VEWbfwPh4u/ls47N+LFMSr4Xg=:AmazonSES"}]}];//Initialization of Object array

var myObj=[];//initialize an object array myObj
var obj={};//initialize a object variable
MyJsonString[0].headers.forEach(function(ob){//going through each rows in the master key
    
    if(ob.name=="From")//check if any row has the name "From"
    {
        obj["name"]=ob["name"];//store name in object variable from MyJsonString
        obj["value"]=ob["value"];//store value in object variable from MyJsonString
        myObj.push(obj);//push the obj arrays in MyObj
    }

    if(ob.name=="Subject")//check if any row has the name "Subject"
    {
        obj["name"]=ob["name"];//store name in object variable from MyJsonString
        obj["value"]=ob["value"];//store value in object variable from MyJsonString
        myObj.push(obj);//push the obj arrays in MyObj
    }

    if(ob.name=="Date")//check if any row has the name "Date"
    {
        obj["name"]=ob["name"];//store name in object variable from MyJsonString
        obj["value"]=ob["value"];//store value in object variable from MyJsonString
        myObj.push(obj);//push the obj arrays in MyObj
    }
});
document.write(JSON.stringify(myObj));//Print the stored values from the myObj object array
